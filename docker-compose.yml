services:
  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: 1234
      MYSQL_DATABASE: aglaea
      MYSQL_USER: TangTuan
      MYSQL_PASSWORD: 1234
    ports:
      - "3307:3306"
    networks:
      - hyneci-net
    volumes:
      - hyneci_mysql-data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  library-api:
    build:
      context: ./LibraryApis
      dockerfile: Dockerfile-dev
    container_name: library-api
    ports:
      - "8080:8080"
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/aglaea?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Ho_Chi_Minh
      SPRING_DATASOURCE_USERNAME: TangTuan
      SPRING_DATASOURCE_PASSWORD: 1234
    volumes:
      - ./LibraryApis:/app   # mount source code vào container
      - ~/.m2:/root/.m2     # cache Maven dependencies để không phải tải lại
    networks:
      - hyneci-net
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 60s

  aglaea-client:
    build:
      context: ./Aglaea
      dockerfile: Dockerfile-dev
    container_name: aglaea-client
    ports:
      - "8081:8081"
    depends_on:
      mysql:
        condition: service_healthy
      library-api:
        condition: service_started
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/aglaea?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Ho_Chi_Minh
      SPRING_DATASOURCE_USERNAME: TangTuan
      SPRING_DATASOURCE_PASSWORD: 1234
    volumes:
      - ./Aglaea:/app
      - ~/.m2:/root/.m2
    networks:
      - hyneci-net
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8081/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 60s
  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "80:80"
    depends_on:
      - aglaea-client
      - library-api
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - hyneci-net

networks:
  hyneci-net:
    driver: bridge
volumes:
  hyneci_mysql-data:
    external: true